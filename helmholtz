import numpy as np
import matplotlib.pyplot as plt
import pyvista as pv
from bfieldtools.utils import cylinder_points
from bfieldtools.line_magnetics import magnetic_field

# Create helmholtz coil with radius R
R = 5

c_points = cylinder_points(
    radius=R, length=0, nlength=1, nalpha=100, orientation=np.array([0, 1, 0])
)
c_points[:, 1] = 0
c_points = np.vstack((c_points, c_points[0, :]))

c1_points = c_points - np.array([0, R / 2, 0])
c2_points = c_points + np.array([0, R / 2, 0])

# PyVista plot setup
plotter = pv.Plotter(window_size=(1200, 800))
plotter.background_color = "white"

# Add coil paths
line1 = pv.lines_from_points(c1_points)
line2 = pv.lines_from_points(c2_points)
plotter.add_mesh(line1, color="blue", line_width=2, label="Coil 1")
plotter.add_mesh(line2, color="red", line_width=2, label="Coil 2")

# Create a grid for the field
box = 3 * R
n = 50
xx = np.linspace(-box, box, n)
yy = np.linspace(-box, box, n)
zz = np.linspace(-box, box, n)
X, Y, Z = np.meshgrid(xx, yy, zz, indexing="ij")

x = X.ravel()
y = Y.ravel()
z = Z.ravel()
b_points = np.array([x, y, z]).T

# Calculate the magnetic field
B = np.zeros(b_points.shape)
B += magnetic_field(c1_points, b_points)
B += magnetic_field(c2_points, b_points)

B_matrix = B.reshape((n, n, n, 3))
B_matrix_norm = np.linalg.norm(B_matrix, axis=-1)

plotter.show()

--

## Create ImageData for structured grid
grid = pv.ImageData() ## UniformGrid()는 0.43.0 이상의 pyvista에서 사용되지 않고 대신 ImageData()를 사용함.
grid.origin = (-box, -box, -box)  # Starting point of the grid
grid.spacing = ((2 * box) / (n - 1),) * 3  # Grid spacing
grid.dimensions = (n, n, n)  # Number of points in each dimension

# Reshape B and B_norm to match the number of points in the grid
B_reshaped = B.reshape((-1, 3))  # Flatten to (n^3, 3)
B_norm_reshaped = B_norm.ravel()  # Flatten to (n^3,) // 여기 두개는 뭔지 잘 모르겠음..

# Assign vector and scalar fields to the grid
grid["vectors"] = B_reshaped
grid["magnitude"] = B_norm_reshaped

# PyVista plotter
plotter = pv.Plotter(window_size=(1500, 800)) #plot 생성, 크기 지정
plotter.background_color = "white" #배경 색

# Add coil paths
line1 = pv.lines_from_points(c1_points, close=True)
line2 = pv.lines_from_points(c2_points, close=True)
plotter.add_mesh(line1, color="blue", line_width=2, label="Coil 1")
plotter.add_mesh(line2, color="red", line_width=2, label="Coil 2")

# Add vector arrows
glyphs = grid.glyph(orient="vectors", scale="magnitude", factor=0.4)
plotter.add_mesh(glyphs, color="blue")

# Add iso-surfaces for field magnitude
contours = grid.contour(isosurfaces=10, scalars="magnitude")
plotter.add_mesh(contours, opacity=0.1, colormap="viridis") #opacity는 투명도(?)를 지정. 0~1까지 지정가능하다.

# Show plot
plotter.show_axes()
plotter.show()

--

# Plot magnetic field along specific axes
plt.figure()
z1 = np.linspace(0, 30, 31)
x1 = y1 = np.zeros_like(z1)
line1_points = np.vstack((x1, y1, z1)).T

Bh_line1 = magnetic_field(c1_points, line1_points) + magnetic_field(c2_points, line1_points)

plt.semilogy(
    z1,
    np.linalg.norm(Bh_line1, axis=1) / np.linalg.norm(Bh_line1, axis=1)[0],
    label="Helmholtz, z-axis",
)

y2 = np.linspace(0, 30, 31)
z2 = x2 = np.zeros_like(y2)
line2_points = np.vstack((x2, y2, z2)).T

Bh_line2 = magnetic_field(c1_points, line2_points) + magnetic_field(c2_points, line2_points)

plt.semilogy(
    y2,
    np.linalg.norm(Bh_line2, axis=1) / np.linalg.norm(Bh_line2, axis=1)[0],
    label="Helmholtz, y-axis",
)

plt.ylabel("Field amplitude (target field units)")
plt.xlabel("Distance from origin")
plt.title('Helmholts B-field')
plt.grid(True, which="minor", axis="y")
plt.grid(True, which="major", axis="y", color="k")
plt.grid(True, which="major", axis="x")
plt.legend()
plt.show()

